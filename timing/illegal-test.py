#!/usr/bin/env python

import subprocess
import time
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-n', '--number', help='Number of times to run the test', default=10, type=int)
parser.add_argument('-s', '--suppress', action='store_true', help='Suppresses libsafe output')
args = parser.parse_args()

tries=args.number
totaltimecatch=0
totaltimenotcatch=0
libsafecount=0
for i in range(tries):
	try:
		start = time.time()
		subprocess.check_output('./bug.sh', stderr=subprocess.STDOUT)
	except subprocess.CalledProcessError as e:
		end = time.time()
		if e.output.split()[0] == 'Libsafe':
			#Libsafe caught it
			if (args.suppress):
				pass
			else:
				print e.output
			libsafecount += 1
			totaltimecatch += (end-start)
		else:
			totaltimenotcatch += (end-start)
print str(libsafecount) + ' out of '+ str(tries) + ' exploit attempts were caught by libsafe.'
if (libsafecount > 0):
	print "avg time spent catching it: " + str(totaltimecatch/libsafecount)
if ((tries-libsafecount) > 0):
	print "avg time spent not catching it: " + str(totaltimenotcatch/(tries-libsafecount))
if (libsafecount > 0 and (tries-libsafecount) > 0):
	print "time difference: " + str(((totaltimecatch/libsafecount) - (totaltimenotcatch/(tries-libsafecount))))
